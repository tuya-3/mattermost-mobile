// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Server Icon Server Icon Component should match snapshot 1`] = `
<View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    hitSlop={
      {
        "bottom": 5,
        "left": 40,
        "right": 20,
        "top": 20,
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <Icon
      color="rgba(255,255,255,0.56)"
      name="server-variant"
      size={24}
    />
  </View>
</View>
`;

exports[`Server Icon Server Icon Component should match snapshot with mentions 1`] = `
<View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    hitSlop={
      {
        "bottom": 5,
        "left": 40,
        "right": 20,
        "top": 20,
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="server_icon"
  >
    <Icon
      color="rgba(255,255,255,0.56)"
      name="server-variant"
      size={24}
    />
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "#ffffff",
            "borderColor": "#162545",
            "borderRadius": 11,
            "color": "#1e325c",
            "fontSize": 12,
            "height": 22,
            "lineHeight": 16.5,
            "minWidth": 26,
            "opacity": 1,
            "transform": [
              {
                "scale": 1,
              },
            ],
          },
          {
            "alignSelf": "flex-end",
            "borderWidth": 2,
            "fontFamily": "OpenSans-Bold",
            "left": 15,
            "overflow": "hidden",
            "paddingHorizontal": 4,
            "position": "absolute",
            "textAlign": "center",
            "top": -1,
          },
          {
            "paddingHorizontal": 5,
          },
          {
            "left": 13,
            "top": -8,
          },
        ]
      }
      testID="server_icon.badge"
    >
      1
    </Text>
  </View>
</View>
`;

exports[`Server Icon Server Icon Component should match snapshot with unreads 1`] = `
<View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={false}
    hitSlop={
      {
        "bottom": 5,
        "left": 40,
        "right": 20,
        "top": 20,
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
    testID="server_icon"
  >
    <Icon
      color="rgba(255,255,255,0.56)"
      name="server-variant"
      size={24}
    />
    <Text
      numberOfLines={1}
      style={
        [
          {
            "backgroundColor": "#ffffff",
            "borderColor": "#162545",
            "borderRadius": 6,
            "color": "#1e325c",
            "fontSize": 12,
            "height": 12,
            "lineHeight": 16.5,
            "minWidth": 12,
            "opacity": 1,
            "transform": [
              {
                "scale": 1,
              },
            ],
          },
          {
            "alignSelf": "flex-end",
            "borderWidth": 2,
            "fontFamily": "OpenSans-Bold",
            "left": 15,
            "overflow": "hidden",
            "paddingHorizontal": 4,
            "position": "absolute",
            "textAlign": "center",
            "top": -1,
          },
          {
            "paddingHorizontal": 0,
          },
          {
            "left": 18,
            "top": -5,
          },
        ]
      }
      testID="server_icon.badge"
    />
  </View>
</View>
`;
